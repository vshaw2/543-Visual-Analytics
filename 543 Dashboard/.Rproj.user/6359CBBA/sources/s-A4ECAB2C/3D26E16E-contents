 

```{r}
toris=read.csv("RoadsProjectScheduleData.csv")
```

```{r}
table(toris$Portfolio.Category)
```

```{r}
# Drainage 
# Roadway, Roadside, Traffic Control (will be lumped together called "Road and Traffic"
# Bridges and Structures 

categoryToSelect=c("Drainage","Roadway","Roadside","Traffic Control","Bridges & Structures")
torisSubSet=toris[toris$Portfolio.Category%in%categoryToSelect,]


```


```{r}
##recode
toRecode=c("Roadway","Roadside","Traffic Control")
ifelse(torisSubSet$Portfolio.Category%in%toRecode, # condition
       "Road and Traffic",# if condition met
       torisSubSet$Portfolio.Category) # else
```


```{r}
torisSubSet$Portfolio.Category= ifelse(torisSubSet$Portfolio.Category%in%toRecode,
                                       "Road and Traffic",
                                       torisSubSet$Portfolio.Category)
```

```{r}
varsToSelect=c("Portfolio.Category","Gate.1","Gate.2","Gate.3",
               "Gate.1..Performance.Reference.","Gate.2..Performance.Reference.","Gate.3..Performance.Reference.")
torisSubSet=torisSubSet[,varsToSelect]
```

```{r}
DateColumns=c("Gate.1","Gate.2","Gate.3",
               "Gate.1..Performance.Reference.","Gate.2..Performance.Reference.","Gate.3..Performance.Reference.")
torisSubSet[,DateColumns]=lapply(torisSubSet[,DateColumns],as.Date,format='%m/%d/%Y')

# you get:
torisSubSet
```
```{r}
torisCompleteDates=torisSubSet[complete.cases(torisSubSet),]
torisCompleteDates
```
```{r}
torisCompleteDates[,8:10]=0
torisCompleteDates[,8:10]=torisCompleteDates[,2:4]-torisCompleteDates[,5:7]
torisCompleteDates[,8:10]
```
```{r}
names(torisCompleteDates)[8:10]=c("Diff1","Diff2","Diff3")
torisCompleteDates[,8:10]=lapply(torisCompleteDates[,8:10],as.numeric)
torisCompleteDates[,8:10]
```
```{r}
aggregate(data=torisCompleteDates,
          cbind(Diff1,Diff2,Diff3)~Portfolio.Category,
          FUN=mean)
```

```{r}
DFtoPlot=torisCompleteDates[,c("Portfolio.Category","Diff1","Diff2","Diff3")]
DFtoPlot
```
```{r}
library(reshape2)
DFtoPlot=melt(DFtoPlot,id.vars = 'Portfolio.Category')
DFtoPlot
```

```{r}
library(ggplot2)

base=ggplot(data=DFtoPlot) + theme_classic()
base + geom_boxplot(aes(x=Portfolio.Category,
                        y=value))
```
```{r}
base + geom_boxplot(aes(x=variable,
                        y=value))
```


```{r}
base + geom_boxplot(aes(x=Portfolio.Category,
                        y=value)) + facet_wrap(variable~.) + coord_flip()
```


